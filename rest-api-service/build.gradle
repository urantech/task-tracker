plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.urantech'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    jjwtVersion = '0.11.2'
    mapstruct = '1.6.0'
    testcontainers = '1.19.3'
    springCloudVersion = '2024.0.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // db
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    // service discovery
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    compileOnly "org.mapstruct:mapstruct:$mapstruct"
    // testcontainers
    testImplementation "org.testcontainers:testcontainers:$testcontainers"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainers"
    testImplementation "org.testcontainers:postgresql:$testcontainers"
    // metrics
    implementation project(':metrics-config')
}

tasks.named('test') {
    useJUnitPlatform()
}
